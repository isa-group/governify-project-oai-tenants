---
swagger: "2.0"
info:
  description: >-
    Tenant to agreement resolver. This service gives the possibility to get the
    agreement of a tenant given
  version: "1.0.0"
  title: "Supervisor"
  termsOfService: "http://supervisor.governify.io/terms/"
  contact:
    name: "ISA Group"
    url: "http://governify.io"
    email: "isagroup.us@gmail.com"
  license:
    name: Apache License 2.0
    url: "http://www.apache.org/licenses/"
basePath: "/api/v1"
schemes:
- http
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /namespaces:
    post:
      tags:
      - namespaces
      description: Create a new namespaces.
      operationId: "namespacesPOST"
      parameters:
      - in: "body"
        name: "namespace"
        description: "Namespace that will be created."
        required: true
        schema:
          $ref: "#/definitions/newNamespace"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/errorModel"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/errorModel"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Namespaces"
    get:
      tags:
      - namespaces
      description: Get all namespaces
      operationId: namespacesGET
      responses:
        200:
          description: All namespaces
          schema:
            type: array
            items:
              $ref: '#/definitions/namespace'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/errorModel"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/errorModel"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Namespaces"
  /namespaces/{name}:
    get:
      tags:
        - namespaces
      description: Get a namespace with {name}
      operationId: namespacesNameGET
      parameters:
        - name: name
          in: path
          description: Name of namespace
          required: true
          type: string
      responses:
        200:
          description: All namespaces
          schema:
            $ref: '#/definitions/namespace'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/errorModel"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/errorModel"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Namespaces"
    delete:
      tags:
        - namespaces
      description: Delete namespace with {name}
      operationId: namespacesNameDELETE
      parameters:
        - name: name
          in: path
          description: Name of namespace
          required: true
          type: string
      responses:
        200:
          description: Namespaces has been deleted
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/errorModel"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/errorModel"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Namespaces"
  /namespaces/{namespace}/tenants:
    post:
      tags:
      - tenants
      description: This endpoint creates a new tenant information.
      operationId: tenantsPOST
      parameters:
        - name: tenant
          in: body
          description: Tenant that will be created
          required: true
          schema:
            $ref: '#/definitions/newTenant'
        - name: namespace
          in: path
          description: Namespace on new tenant will be created
          required: true
          type: string
      responses:
        200:
          description: Tenant has been created.
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/errorModel"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/errorModel"
        default:
          description: "Unexpected error"
      x-swagger-router-controller: "Tenants"
    get:
      tags:
      - "tenants"
      description: >-
        This endpoint returns the tenant information that is required. You must
        pass keyName and keyValue and the system returns a specific tenant
        filtered by this keyName with this keyValue.
      operationId: "tenantsGET"
      parameters:
      - name: namespace
        in: path
        description: Namespace on new tenant will be created
        required: true
        type: string
      - name: "keyName"
        in: "query"
        description: "Name of query param"
        required: true
        type: "string"
      - name: "keyValue"
        in: "query"
        description: "Value of query param"
        required: true
        type: "string"
      responses:
        200:
          description: "Scope information that is required"
          schema:
            $ref: "#/definitions/tenant"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/errorModel"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/errorModel"
        default:
          description: "Unexpected error"
      x-swagger-router-controller: "Tenants"
  /namespaces/{namespace}/tenants/{id}:
    delete:
      tags:
      - "tenants"
      description: Delete tenant with tenantId = {id}
      operationId: "tenantsIdDELETE"
      parameters:
      - name: id
        in: path
        description: "Tenant identifier"
        required: true
        type: "string"
      - name: namespace
        in: path
        description: Namespace on new tenant will be created
        required: true
        type: string
      responses:
        200:
          description: Tenant with {id} has been deleted
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/errorModel"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/errorModel"
        default:
          description: "Unexpected error"
      x-swagger-router-controller: "Tenants"
definitions:
  tenant:
    type: "object"
    properties:
      _id:
        type: string
      agreement:
        type: "string"
      scope:
        type: object
        properties: {}

  newTenant:
    type: object
    properties:
      agreement:
        type: string
      scope:
        type: object
        properties: {}

  namespace:
    type: object
    properties:
      _id:
        type: string
      name:
        type: string
      description:
        type: string

  newNamespace:
    type: object
    properties:
      name:
        type: string
      description:
        type: string

  errorModel:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
